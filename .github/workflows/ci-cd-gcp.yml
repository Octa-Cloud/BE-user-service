name: User Service CI/CD (GCP)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 동일 브랜치에서 중복 실행 막기 (선택)
concurrency:
  group: usersvc-${{ github.ref }}
  cancel-in-progress: true

env:
  REGION: asia-northeast3
  REPO: microservices
  IMAGE: user-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      pull-requests: write
      # (패키지/릴리스가 필요하면 packages: write 등 추가)
    steps:
      - uses: actions/checkout@v4
        with:
          # git remote에 기본 토큰 주입을 막아 push 시 우리가 지정한 토큰만 쓰도록
          persist-credentials: false

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build
        run: ./gradlew build -x test

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

      - name: Build and push image
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          set -euo pipefail
          TAG=${{ github.sha }}
          IMAGE_URI=${REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${REPO}/${IMAGE}
          docker build -t ${IMAGE_URI}:${TAG} -t ${IMAGE_URI}:latest .
          docker push ${IMAGE_URI}:${TAG}
          docker push ${IMAGE_URI}:latest
          echo "IMAGE_URI=${IMAGE_URI}:${TAG}" >> $GITHUB_ENV

      # (옵션1) infra 배포 워크플로 직접 트리거로 즉시 배포
      - name: Trigger infra deploy with IMAGE_URI
        if: github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          INFRA_REPO: ${{ secrets.INFRA_REPO }}   # e.g. org/infra-repo
          IMAGE_URI: ${{ env.IMAGE_URI }}
        run: |
          set -euo pipefail
          echo "Triggering infra deploy with IMAGE_URI=${IMAGE_URI}"
          echo "${GH_TOKEN}" | gh auth login --with-token
          gh workflow run gcp-deploy.yml -R ${INFRA_REPO} --ref main -f IMAGE_URI="${IMAGE_URI}"
