name: User-Service Image Build
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      # 태그명 변수화 + 짧게 만들기
      - name: Set Image Version Tag
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # Docker Image 빌드 및 푸시
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          # file: ./Dockerfile   # 루트가 아니면 명시
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/user-service:${{ steps.vars.outputs.sha_short }}
            docker.io/${{ secrets.DOCKER_USERNAME }}/user-service:latest
      # IMAGE_NAME : prefix로 Docker Hub의 Repository 이름이 들어가야 함

      # ArgoCD가 참조하는 Repository로 checkout
      - name: Update Helm Charts Repo
        uses: actions/checkout@v3
        with:
          repository: Octa-Cloud/Infra-helm-charts    # ArgoCD가 바라보는 Organization/Repo
          token: ${{ secrets.GH_PAT }}       # Personal Access Token 필요
          path: infra-helm

      - name: Install yq
        run: |
          YQ_VERSION=v4.44.3
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
          chmod +x /usr/local/bin/yq

      # Manifest Repository에서 Manifest 파일 내의 이미지 태그를 업데이트
      - name: Update image tag in Deployment yaml
        run: |
          echo "== ls infra-helm ==" && ls -la infra-helm || true
          echo "== find values.yaml ==" && find infra-helm -maxdepth 5 -name values.yaml -print
          CHART_DIR=$(find infra-helm -maxdepth 5 -type f -name values.yaml -path "*/user-service/*" -printf '%h\n' -quit)
          if [ -z "$CHART_DIR" ]; then echo "values.yaml 위치를 찾지 못했습니다."; exit 1; fi
          echo "Using CHART_DIR=$CHART_DIR"
          yq -i '.image.repository = "'"${{ secrets.DOCKER_USERNAME }}"'"/user-service"' "$CHART_DIR/values.yaml"
          yq -i '.image.tag = "${{ steps.vars.outputs.sha_short }}"' "$CHART_DIR/values.yaml"
          git config user.name "koungq"
          git config user.email "guu119@naver.com"
          if git -C "$CHART_DIR" diff --quiet values.yaml; then
            echo "No changes detected in values.yaml"
          else
            echo "Changes detected:"
            git -C "$CHART_DIR" diff values.yaml || true
            git -C "$CHART_DIR" add values.yaml
            git -C "$CHART_DIR" commit -m "Update user-service image to ${{ steps.vars.outputs.sha_short }}"
            git push origin main
          fi